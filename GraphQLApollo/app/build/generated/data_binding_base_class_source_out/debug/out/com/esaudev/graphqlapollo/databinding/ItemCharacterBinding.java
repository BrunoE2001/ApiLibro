// Generated by view binder compiler. Do not edit!
package com.esaudev.graphqlapollo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.esaudev.graphqlapollo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCharacterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivBook;

  @NonNull
  public final TextView txtAuthor;

  @NonNull
  public final TextView txtBookTitle;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtPrice;

  private ItemCharacterBinding(@NonNull CardView rootView, @NonNull ImageView ivBook,
      @NonNull TextView txtAuthor, @NonNull TextView txtBookTitle, @NonNull TextView txtDescription,
      @NonNull TextView txtPrice) {
    this.rootView = rootView;
    this.ivBook = ivBook;
    this.txtAuthor = txtAuthor;
    this.txtBookTitle = txtBookTitle;
    this.txtDescription = txtDescription;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCharacterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_character, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCharacterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBook;
      ImageView ivBook = ViewBindings.findChildViewById(rootView, id);
      if (ivBook == null) {
        break missingId;
      }

      id = R.id.txtAuthor;
      TextView txtAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtAuthor == null) {
        break missingId;
      }

      id = R.id.txtBookTitle;
      TextView txtBookTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtBookTitle == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      return new ItemCharacterBinding((CardView) rootView, ivBook, txtAuthor, txtBookTitle,
          txtDescription, txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
